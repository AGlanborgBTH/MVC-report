<h3>
    kmom02
</h3>
<p>
    Arv inom OOPHP, definerat med nyckelorder <code>extends</code>. Arv eller 'Inheritance',
    är objekt som skapas med ett annat objekt som mall. Med det menas att ett objekt skapas
    med samma publika (public) och skyddade (protected) metoder och attribut. Arv kan användas
    på många sätt. Ett av de vanligaste sätten att använda arv är då man har en generall klass
    som flera andra klasser ärver sig från. De ärvda klasserna specifiserar sedan funktionerna
    av den första generella klassen.
</p>
<p>
    Interface, när man diskuterar OOPHP, är realterade metoder i tomma klasser. Det är en
    klass som inte har några properties och inga definerade metoder. Det är en klass som endast
    listar vilka metoder som den metodens arv ska definera. Sättet interface används inom
    programmering varierar. Interface kan användas som ett fail-safe, som tvingar programmeraren
    att se till att alla metoder som ska vara definerade finns med. Det är även ett sätt använda
    arv som gör att de delade metoderna blir mer spesifiserade. Det i sin tur gör att metoderna
    använda blir mer flexibla och har förmågan att anpassas.
</p>
<p>
    Komposition är en typ av ägenskap inom OOPHP. Komposition eller 'Composition' är då ett
    objekt skapar ett annat objekt. Det efterliknar Aggregation, men skillnaden är att
    komposition innebär att det skapade objektet finns för att användas i det skapande objektet.
    Aggregation innebär att det skapande objektet har möjligeheten eller är gjord för att
    innehålla och/eller skapa flera objekt. Ett bra exempel på komposition är att om en bil
    är ett skapande objekt så är motorn ett skapat objekt. Ett annat expemel, fast för aggregation,
    är om en person är ett objekt och ett företag är ett annat, så kan företaget innehålla flera
    person objekt.
</p>
<p>
    Komposition används i många scenarion. Det kan ge klasser förmågan att expandera och använda
    flera unika metoder. Det tillåter även flera klasser att dela metoder/klasser utan att ha två
    definitioner av samma metod i två eller fler objekt.
</p>
<p>
    I php så kan en klass endast arva från en annan klass. Men med trait så kan vilken klass som
    helst använda flera delade metoder. Traits är metoder som är definerade utanför klasser och
    som vilken klass som helst kan använda, en eller flera, av. Det ger klasser förmågan att arvas
    från andra klasser och samtidigt använda sig av andra delade metoder.
</p>
<h4>
    Denna vecka
</h4>
<p>
    Min kodning har varit helt okej. Jag känner mig nöjd med min kod, men jag känner mig inte stålt
    över den heller. Det är mitt första försök till att arbeta med PHP klasser och det enda jag har
    gjort med klasser tidigare var i OOPython kursen. Så jag känner mig osäker på vad jag har
    skapat och jag är osäker på vad jag kommer kunna expandera och använda min klasser till. Det
    känns som att det finns mycket jag inte kan om objekt i php och att det finns mycket som jag
    kan använda som jag inte gör. Så när det kommer till framtiden av min kod och förbättringar så
    känner jag att det kan ändras mycket under tiden som jag arbetar med den. Jag personligen är
    inte fast med mina klasser och jag ändrar/tar bort flera klasser om det är vad som kommer
    krävas.
</p>
<p>
    Jag personligen känner inte att flödesdiagramet och psuedokoden hjälper mig, just nu i alla
    fall. Jag kände mycket stress under tiden som jag skrev det och jag kännde att jag borde skriva
    koden istället för att slösa på ett diagram som jag troligen inte kommer att kolla på igen,
    efter att jag blir klar med det. Eftersom detta inte är ett projekt som vi har diskuterat innan
    och jag personligen inte har någon aning om var det leder, så kände jag mig osäker när jag skrev
    psuedokoden. Jag kännde att det skulle kunna sluta med att jag blir tvungen att skriva om allt
    till slut för att det fanns någon extra krav i de/den kommande uppgiften/uppgifterna.
</p>
<p>
    När det kommer till programmering så känner jag att jag har en stark förmåga att föreställa mig
    kod och de metoder som behöver användas för att skapa projektet. Jag känner även att jag har en
    bra förmåga att förespå vas som kan/behöver expanderas och programmera efter de områderna.
</p>
<p>
    TIL hur twig och konceptet av block programmering fungerar.
</p>
